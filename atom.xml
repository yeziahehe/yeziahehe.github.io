<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ivan&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yeziahehe.com/"/>
  <updated>2020-03-08T10:06:55.254Z</updated>
  <id>http://yeziahehe.com/</id>
  
  <author>
    <name>叶帆</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Minimum Size Subarray Sum</title>
    <link href="http://yeziahehe.com/2020/03/08/MinimumSizeSubarraySum/"/>
    <id>http://yeziahehe.com/2020/03/08/MinimumSizeSubarraySum/</id>
    <published>2020-03-08T10:03:49.000Z</published>
    <updated>2020-03-08T10:06:55.254Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/43VbxO.png" alt></p><p><a href="https://leetcode.com/problems/minimum-size-subarray-sum/" target="_blank" rel="noopener">LeetCode 209. Minimum Size Subarray Sum</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度：O(n)。每个指针移动都需要 O(n)O(n) 的时间。每个元素至多被访问两次，一次被右端点访问，一次被左端点访问。<br>空间复杂度: O(1)。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">minSubArrayLen</span><span class="params">(<span class="number">_</span> s: Int, <span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> ans = <span class="type">Int</span>.<span class="built_in">max</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            sum += nums[i]</span><br><span class="line">            <span class="keyword">while</span> sum &gt;= s &#123;</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, i-j+<span class="number">1</span>)</span><br><span class="line">                sum -= nums[j]</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans != <span class="type">Int</span>.<span class="built_in">max</span> ? ans : <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/08/MinimumSizeSubarraySum/">http://yeziahehe.com/2020/03/08/MinimumSizeSubarraySum/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
      <category term="Two Pointer" scheme="http://yeziahehe.com/tags/Two-Pointer/"/>
    
      <category term="Binary Search" scheme="http://yeziahehe.com/tags/Binary-Search/"/>
    
  </entry>
  
  <entry>
    <title>Max Consecutive Ones</title>
    <link href="http://yeziahehe.com/2020/03/08/MaxConsecutiveOnes/"/>
    <id>http://yeziahehe.com/2020/03/08/MaxConsecutiveOnes/</id>
    <published>2020-03-08T05:38:54.000Z</published>
    <updated>2020-03-08T05:40:05.057Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/PCgWd5.png" alt></p><p><a href="https://leetcode.com/problems/max-consecutive-ones/" target="_blank" rel="noopener">LeetCode 485. Max Consecutive Ones</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMaxConsecutiveOnes</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] == <span class="number">0</span> &#123;</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, k)</span><br><span class="line">                k = <span class="number">0</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                k += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(ans, k)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/08/MaxConsecutiveOnes/">http://yeziahehe.com/2020/03/08/MaxConsecutiveOnes/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Remove Element</title>
    <link href="http://yeziahehe.com/2020/03/08/RemoveElement/"/>
    <id>http://yeziahehe.com/2020/03/08/RemoveElement/</id>
    <published>2020-03-08T04:44:25.000Z</published>
    <updated>2020-03-08T05:21:36.542Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/iShot2020-03-08下午12.45.47.png" alt></p><p><a href="https://leetcode.com/problems/remove-element/" target="_blank" rel="noopener">LeetCode 27. Remove Element</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>使用两个指针，一个快指针 i 和一个慢指针 k 。i 每次移动一步，而 k 只在添加新的被需要的值时才移动一步。</p><p>解决这类问题的关键是：<strong>确定两个指针的移动策略。</strong></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">removeElement</span><span class="params">(<span class="number">_</span> nums: <span class="keyword">inout</span> [Int], <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> nums[i] != val &#123;</span><br><span class="line">                nums[k] = nums[i]</span><br><span class="line">                k += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> k</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/08/RemoveElement/">http://yeziahehe.com/2020/03/08/RemoveElement/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
      <category term="Two Pointer" scheme="http://yeziahehe.com/tags/Two-Pointer/"/>
    
  </entry>
  
  <entry>
    <title>Two Sum II - Input array is sorted</title>
    <link href="http://yeziahehe.com/2020/03/08/TwoSumII/"/>
    <id>http://yeziahehe.com/2020/03/08/TwoSumII/</id>
    <published>2020-03-08T04:21:01.000Z</published>
    <updated>2020-03-08T04:25:20.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/IoQKgr.png" alt></p><p><a href="https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/" target="_blank" rel="noopener">LeetCode 167. Two Sum II - Input array is sorted</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题方法"><a href="#解题方法" class="headerlink" title="解题方法"></a>解题方法</h1><p>要把排好序这个特征充分利用，利用双指针，分别从头尾开始，两数相加，和如果为 target 直接返回；如果偏大，尾指针前移；如果偏小，头指针后移。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> j = numbers.<span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> sum = numbers[i] + numbers[j]</span><br><span class="line">            <span class="keyword">if</span> sum == target &#123;</span><br><span class="line">                <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> sum &lt; target &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/08/TwoSumII/">http://yeziahehe.com/2020/03/08/TwoSumII/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
      <category term="Two Pointer" scheme="http://yeziahehe.com/tags/Two-Pointer/"/>
    
      <category term="Binary Search" scheme="http://yeziahehe.com/tags/Binary-Search/"/>
    
  </entry>
  
  <entry>
    <title>Array Partition I</title>
    <link href="http://yeziahehe.com/2020/03/08/ArrayPartitionI/"/>
    <id>http://yeziahehe.com/2020/03/08/ArrayPartitionI/</id>
    <published>2020-03-07T16:24:11.000Z</published>
    <updated>2020-03-07T16:25:27.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/XBGfNJ.png" alt></p><p><a href="https://leetcode.com/problems/array-partition-i/" target="_blank" rel="noopener">LeetCode 561. Array Partition I</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(nlogn), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">    func arrayPairSum(_ nums: [Int]) -&gt; Int &#123;</span><br><span class="line">        let ans = nums.sorted()</span><br><span class="line">        return ans.enumerated().filter &#123; $0.offset % 2 == 0 &#125;.reduce(0) &#123; $0 + $1.element &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/08/ArrayPartitionI/">http://yeziahehe.com/2020/03/08/ArrayPartitionI/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Reverse String</title>
    <link href="http://yeziahehe.com/2020/03/07/ReverseString/"/>
    <id>http://yeziahehe.com/2020/03/07/ReverseString/</id>
    <published>2020-03-07T15:44:19.000Z</published>
    <updated>2020-03-07T15:46:41.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/YuRKHd.png" alt></p><p><a href="https://leetcode.com/problems/reverse-string/" target="_blank" rel="noopener">LeetCode 344. Reverse String</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>reverse() 函数的内部实现。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseString</span><span class="params">(<span class="number">_</span> s: <span class="keyword">inout</span> [Character])</span></span> &#123;</span><br><span class="line">        <span class="comment">// 为了实现 reverse() 函数</span></span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> j = s.<span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            s.swapAt(i, j)</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/07/ReverseString/">http://yeziahehe.com/2020/03/07/ReverseString/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="String" scheme="http://yeziahehe.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Longest Common Prefix</title>
    <link href="http://yeziahehe.com/2020/03/07/LongestCommonPrefix/"/>
    <id>http://yeziahehe.com/2020/03/07/LongestCommonPrefix/</id>
    <published>2020-03-07T15:25:32.000Z</published>
    <updated>2020-03-07T15:28:08.520Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/IBmHok.png" alt></p><p><a href="https://leetcode.com/problems/longest-common-prefix/" target="_blank" rel="noopener">LeetCode 14. Longest Common Prefix</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(s), 空间复杂度: O(1)</p><p>s 为字符串数组所有字符的总和。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>取出第一个元素，然后遍历字符串数组，通过 <code>hasPrefix</code> 和 <code>removeLast</code> 不断寻找前缀。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="number">_</span> strs: [String])</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> strs.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> strs.<span class="built_in">count</span> == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> strs.first!</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> ans = strs.first!</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">1</span>..&lt;strs.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> !strs[i].hasPrefix(ans) &#123;</span><br><span class="line">                    ans.removeLast()</span><br><span class="line">                    <span class="keyword">if</span> ans.isEmpty &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> ans</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/07/LongestCommonPrefix/">http://yeziahehe.com/2020/03/07/LongestCommonPrefix/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="String" scheme="http://yeziahehe.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>Add Binary</title>
    <link href="http://yeziahehe.com/2020/03/07/AddBinary/"/>
    <id>http://yeziahehe.com/2020/03/07/AddBinary/</id>
    <published>2020-03-07T13:26:16.000Z</published>
    <updated>2020-03-08T04:33:02.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/jmfFIQ.png" alt></p><p><a href="https://leetcode.com/problems/add-binary/" target="_blank" rel="noopener">LeetCode 67. Add Binary</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(Max(m, n)), 空间复杂度: O(Max(m, n))</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>使用内置函数，但是打印了下最大支持，理论上是超过 64 位 1 就不行了。</p><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/截屏2020-03-07下午5.55.35.png" alt></p><ul><li>转成十进制</li><li>相加</li><li>转成二进制输出</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addBinary</span><span class="params">(<span class="number">_</span> a: String, <span class="number">_</span> b: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="built_in">max</span> = <span class="type">String</span>(<span class="type">UInt64</span>.<span class="built_in">max</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"\(max) has \(max.count) digits."</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="type">String</span>((<span class="type">UInt64</span>(a, radix: <span class="number">2</span>) ?? <span class="number">0</span>) + (<span class="type">UInt64</span>(b, radix: <span class="number">2</span>) ?? <span class="number">0</span>), radix: <span class="number">2</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><p>首先说明和上面问题一样，Int 64 的局限性，说下思路。</p><p>看到二进制的题目，要善用位运算。<br>相加用位运算分两步：</p><ul><li>按位异或 ^ ：算出不进位每一位的相加值</li><li>按位与 &amp; 并左移以为 &lt;&lt; ：算出需要进位的二进制值</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addBinary</span><span class="params">(<span class="number">_</span> a: String, <span class="number">_</span> b: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="type">Int</span>(a, radix: <span class="number">2</span>) ?? <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> y = <span class="type">Int</span>(b, radix: <span class="number">2</span>) ?? <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> ans: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> carry: <span class="type">Int</span> = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> y != <span class="number">0</span> &#123;</span><br><span class="line">            ans = x ^ y</span><br><span class="line">            carry = (x &amp; y) &lt;&lt; <span class="number">1</span></span><br><span class="line">            x = ans</span><br><span class="line">            y = carry</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">String</span>(ans, radix: <span class="number">2</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">addBinary</span><span class="params">(<span class="number">_</span> a: String, <span class="number">_</span> b: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> a = <span class="type">Array</span>(a)</span><br><span class="line">        <span class="keyword">let</span> b = <span class="type">Array</span>(b)</span><br><span class="line">        <span class="keyword">var</span> ans = <span class="string">""</span></span><br><span class="line">        <span class="keyword">var</span> carry = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> i = a.<span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">        <span class="keyword">var</span> j = b.<span class="built_in">count</span> - <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span> || carry &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= <span class="number">0</span> &#123;</span><br><span class="line">                carry += <span class="type">Int</span>(<span class="type">String</span>(a[i]))!</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> j &gt;= <span class="number">0</span> &#123;</span><br><span class="line">                carry += <span class="type">Int</span>(<span class="type">String</span>(b[j]))!</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            ans = <span class="string">"\(carry % 2)"</span> + ans</span><br><span class="line">            carry = carry / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    func addBinary(_ a: String, _ b: String) -&gt; String &#123;</span></span><br><span class="line"><span class="comment">        let max = String(UInt64.max)</span></span><br><span class="line"><span class="comment">        print("\(max) has \(max.count) digits.")</span></span><br><span class="line"><span class="comment">        return String((UInt64(a, radix: 2) ?? 0) + (UInt64(b, radix: 2) ?? 0), radix: 2)</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    func addBinary(_ a: String, _ b: String) -&gt; String &#123;</span></span><br><span class="line"><span class="comment">        var x = Int(a, radix: 2) ?? 0</span></span><br><span class="line"><span class="comment">        var y = Int(b, radix: 2) ?? 0</span></span><br><span class="line"><span class="comment">        var ans: Int = 0</span></span><br><span class="line"><span class="comment">        var carry: Int = 0</span></span><br><span class="line"><span class="comment">        while y != 0 &#123;</span></span><br><span class="line"><span class="comment">            ans = x ^ y</span></span><br><span class="line"><span class="comment">            carry = (x &amp; y) &lt;&lt; 1</span></span><br><span class="line"><span class="comment">            x = ans</span></span><br><span class="line"><span class="comment">            y = carry</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        return String(ans, radix: 2)</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">看到二进制的题目，要善用位运算。</span></span><br><span class="line"><span class="comment">相加用位运算分两步：</span></span><br><span class="line"><span class="comment">- 按位异或 ^ ：算出不进位每一位的相加值</span></span><br><span class="line"><span class="comment">- 按位与 &amp; 并左移以为 &lt;&lt; ：算出需要进位的二进制值</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/07/AddBinary/">http://yeziahehe.com/2020/03/07/AddBinary/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="String" scheme="http://yeziahehe.com/tags/String/"/>
    
      <category term="Math" scheme="http://yeziahehe.com/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>Pascal&#39;s Triangle</title>
    <link href="http://yeziahehe.com/2020/03/07/Pascal&#39;sTriangle/"/>
    <id>http://yeziahehe.com/2020/03/07/Pascal&#39;sTriangle/</id>
    <published>2020-03-07T06:59:32.000Z</published>
    <updated>2020-03-07T13:35:24.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/U5IbCj.png" alt></p><p><a href="https://leetcode.com/problems/pascals-triangle/" target="_blank" rel="noopener">LeetCode 118. Pascal’s Triangle</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(numRows^2), 空间复杂度: O(numRows^2)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>头和尾的元素都是1，中间用循环赋值即可，赋值表达式<code>ans[i-1][j-1]+ans[i-1][j]</code>。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generate</span><span class="params">(<span class="number">_</span> numRows: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans: [[<span class="type">Int</span>]] = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;numRows &#123;</span><br><span class="line">            <span class="keyword">if</span> i == <span class="number">0</span> &#123;</span><br><span class="line">                ans.append([<span class="number">1</span>])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 头和尾的元素都是1，中间用循环赋值即可</span></span><br><span class="line">                <span class="keyword">var</span> nums: [<span class="type">Int</span>] = [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">1</span>..&lt;i &#123;</span><br><span class="line">                    nums.insert(ans[i-<span class="number">1</span>][j-<span class="number">1</span>]+ans[i-<span class="number">1</span>][j], at: j)</span><br><span class="line">                &#125;</span><br><span class="line">                ans.append(nums)     </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/07/Pascal&#39;sTriangle/">http://yeziahehe.com/2020/03/07/Pascal&#39;sTriangle/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Spiral Matrix</title>
    <link href="http://yeziahehe.com/2020/03/06/SpiralMatrix/"/>
    <id>http://yeziahehe.com/2020/03/06/SpiralMatrix/</id>
    <published>2020-03-06T09:03:19.000Z</published>
    <updated>2020-03-07T13:40:47.526Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/wAGdF6.png" alt></p><p><a href="https://leetcode.com/problems/spiral-matrix/" target="_blank" rel="noopener">LeetCode 54. Spiral Matrix</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(n)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>找到移动的条件 <code>i+v == m.count || i+v == -1 || j+h == m[0].count || j+h == -1 || m[i+v][j+h] == 0</code><br>取出来的元素置为 0，(h, v) 组合代表移动方向</p><ul><li>→ (1, 0)</li><li>↓ (0, 1)</li><li>← (-1, 0)</li><li>↑ (0, -1)</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">spiralOrder</span><span class="params">(<span class="number">_</span> matrix: [[Int]])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> h = <span class="number">1</span></span><br><span class="line">        <span class="keyword">var</span> v = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> ans: [<span class="type">Int</span>] = []</span><br><span class="line">        <span class="keyword">var</span> m: [[<span class="type">Int</span>]] = matrix</span><br><span class="line">        <span class="keyword">if</span> m.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;(m.<span class="built_in">count</span> * m[<span class="number">0</span>].<span class="built_in">count</span>) &#123;</span><br><span class="line">            ans.append(m[i][j])</span><br><span class="line">            m[i][j] = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> i+v == m.<span class="built_in">count</span> || i+v == -<span class="number">1</span> || j+h == m[<span class="number">0</span>].<span class="built_in">count</span> || j+h == -<span class="number">1</span> || m[i+v][j+h] == <span class="number">0</span> &#123;</span><br><span class="line">                <span class="comment">// 要变方向</span></span><br><span class="line">                <span class="keyword">if</span> h == <span class="number">1</span> &amp;&amp; v == <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="comment">// → (1, 0)</span></span><br><span class="line">                    h = <span class="number">0</span></span><br><span class="line">                    v = <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> h == <span class="number">0</span> &amp;&amp; v == <span class="number">1</span> &#123;</span><br><span class="line">                    h = -<span class="number">1</span></span><br><span class="line">                    v = <span class="number">0</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> h == -<span class="number">1</span> &amp;&amp; v == <span class="number">0</span> &#123;</span><br><span class="line">                    h = <span class="number">0</span></span><br><span class="line">                    v = -<span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> h == <span class="number">0</span> &amp;&amp; v == -<span class="number">1</span> &#123;</span><br><span class="line">                    h = <span class="number">1</span></span><br><span class="line">                    v = <span class="number">0</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            i += v</span><br><span class="line">            j += h</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** (h, v) 组合代表移动方向</span></span><br><span class="line"><span class="comment"> → (1, 0)</span></span><br><span class="line"><span class="comment"> ↓ (0, 1)</span></span><br><span class="line"><span class="comment"> ← (-1, 0)</span></span><br><span class="line"><span class="comment"> ↑ (0, -1)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/06/SpiralMatrix/">http://yeziahehe.com/2020/03/06/SpiralMatrix/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Diagonal Traverse</title>
    <link href="http://yeziahehe.com/2020/03/05/DiagonalTraverse/"/>
    <id>http://yeziahehe.com/2020/03/05/DiagonalTraverse/</id>
    <published>2020-03-05T05:05:38.000Z</published>
    <updated>2020-03-05T09:21:40.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/cAJaFK.png" alt></p><p><a href="https://leetcode.com/problems/diagonal-traverse/" target="_blank" rel="noopener">LeetCode 498. Diagonal Traverse</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(mn), 空间复杂度: O(mn)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>边界条件很多，用 <code>(i+j)%2</code> 判断是 ↗ 还是 ↙ ，不同情况中还要判断转向的条件。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDiagonalOrder</span><span class="params">(<span class="number">_</span> matrix: [[Int]])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> ans: [<span class="type">Int</span>] = []</span><br><span class="line">        <span class="keyword">while</span> (i &lt; matrix.<span class="built_in">count</span> &amp;&amp; j &lt; matrix[<span class="number">0</span>].<span class="built_in">count</span>) &#123;</span><br><span class="line">            ans.append(matrix[i][j])</span><br><span class="line">            <span class="keyword">if</span> (i + j) % <span class="number">2</span> == <span class="number">0</span> &#123;</span><br><span class="line">                <span class="comment">// ↗ </span></span><br><span class="line">                <span class="keyword">if</span> j == matrix[<span class="number">0</span>].<span class="built_in">count</span> - <span class="number">1</span> &#123;</span><br><span class="line">                    <span class="comment">// 右边到顶了，要换方向，坐标(i+1, j)</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> i == <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="comment">// 上面到顶了，要换方向，坐标(i, j+1)</span></span><br><span class="line">                    j += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 不换方向，坐标(i-1, j+1)</span></span><br><span class="line">                    i -= <span class="number">1</span></span><br><span class="line">                    j += <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// ↙ </span></span><br><span class="line">                <span class="keyword">if</span> i == matrix.<span class="built_in">count</span> - <span class="number">1</span> &#123;</span><br><span class="line">                    <span class="comment">// 下边到底了，要换方向，坐标(i, j+1)</span></span><br><span class="line">                    j += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> j == <span class="number">0</span> &#123;</span><br><span class="line">                    <span class="comment">// 左边到底了，要换方向，坐标(i+1, j)</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 不换方向</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                    j -= <span class="number">1</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/05/DiagonalTraverse/">http://yeziahehe.com/2020/03/05/DiagonalTraverse/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Largest Number At Least Twice of Others</title>
    <link href="http://yeziahehe.com/2020/03/05/LargestNumberAtLeastTwiceOfOthers/"/>
    <id>http://yeziahehe.com/2020/03/05/LargestNumberAtLeastTwiceOfOthers/</id>
    <published>2020-03-05T05:05:38.000Z</published>
    <updated>2020-03-05T05:40:35.054Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/QiMXgQ.png" alt></p><p><a href="https://leetcode.com/problems/largest-number-at-least-twice-of-others/" target="_blank" rel="noopener">LeetCode 747. Largest Number At Least Twice of Others</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>考虑只要第二大数字的两倍小于最大数字即可。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">dominantIndex</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> == <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> s = nums.sorted()</span><br><span class="line">        <span class="keyword">if</span> s[nums.<span class="built_in">count</span> - <span class="number">1</span>] &gt;= s[nums.<span class="built_in">count</span> - <span class="number">2</span>] * <span class="number">2</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> nums.firstIndex(of: s[nums.<span class="built_in">count</span> - <span class="number">1</span>])!</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/05/LargestNumberAtLeastTwiceOfOthers/">http://yeziahehe.com/2020/03/05/LargestNumberAtLeastTwiceOfOthers/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Find Pivot Index</title>
    <link href="http://yeziahehe.com/2020/03/05/FindPivotIndex/"/>
    <id>http://yeziahehe.com/2020/03/05/FindPivotIndex/</id>
    <published>2020-03-05T05:05:38.000Z</published>
    <updated>2020-03-05T05:36:57.273Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/iShot2020-03-05下午01.10.53.png" alt></p><p><a href="https://leetcode.com/problems/find-pivot-index/" target="_blank" rel="noopener">LeetCode 724. Find Pivot Index</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>有重复返回最左边，考虑数组元素前缀和。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">pivotIndex</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="comment">// 求和</span></span><br><span class="line">        <span class="keyword">let</span> sum = nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + $<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> leftSum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> leftSum == sum - leftSum - nums[i] &#123;</span><br><span class="line">                <span class="keyword">return</span> i</span><br><span class="line">            &#125;</span><br><span class="line">            leftSum += nums[i]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/05/FindPivotIndex/">http://yeziahehe.com/2020/03/05/FindPivotIndex/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Moving Average from Data Stream</title>
    <link href="http://yeziahehe.com/2020/03/03/MovingAverageFromDataStream/"/>
    <id>http://yeziahehe.com/2020/03/03/MovingAverageFromDataStream/</id>
    <published>2020-03-03T15:32:08.000Z</published>
    <updated>2020-03-03T15:34:32.727Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/YNmtvv.png" alt></p><p><a href="https://leetcode.com/problems/moving-average-from-data-stream/" target="_blank" rel="noopener">LeetCode 346. Moving Average from Data Stream</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度：O(1)，空间复杂度：O(n)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MovingAverage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> data: [<span class="type">Int</span>]</span><br><span class="line">    <span class="keyword">var</span> size: <span class="type">Int</span></span><br><span class="line">    <span class="keyword">var</span> sum: <span class="type">Int</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> size: <span class="type">Int</span>) &#123;</span><br><span class="line">        data = []</span><br><span class="line">        <span class="keyword">self</span>.size = size</span><br><span class="line">        sum = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> data.<span class="built_in">count</span> == size &#123;</span><br><span class="line">            sum -= data[<span class="number">0</span>]</span><br><span class="line">            data.remove(at: <span class="number">0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        sum += val</span><br><span class="line">        data.append(val)</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">Double</span>)(sum)/(<span class="type">Double</span>)(data.<span class="built_in">count</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your MovingAverage object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * let obj = MovingAverage(size)</span></span><br><span class="line"><span class="comment"> * let ret_1: Double = obj.next(val)</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/03/MovingAverageFromDataStream/">http://yeziahehe.com/2020/03/03/MovingAverageFromDataStream/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Queue" scheme="http://yeziahehe.com/tags/Queue/"/>
    
  </entry>
  
  <entry>
    <title>Reshape the Matrix</title>
    <link href="http://yeziahehe.com/2020/03/02/ReshapeTheMatrix/"/>
    <id>http://yeziahehe.com/2020/03/02/ReshapeTheMatrix/</id>
    <published>2020-03-02T14:10:17.000Z</published>
    <updated>2020-03-02T14:16:13.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/iShot2020-03-02下午10.13.52.png" alt></p><p><a href="https://leetcode.com/problems/reshape-the-matrix/" target="_blank" rel="noopener">LeetCode 566. Reshape the Matrix</a>。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>思路很简单，二维数组间的转换 ans[i/c][i%c] = nums[i/col][i%col]</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">matrixReshape</span><span class="params">(<span class="number">_</span> nums: [[Int]], <span class="number">_</span> r: Int, <span class="number">_</span> <span class="built_in">c</span>: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> * nums[<span class="number">0</span>].<span class="built_in">count</span> != r * <span class="built_in">c</span> &#123;</span><br><span class="line">            <span class="comment">// 不可以转换</span></span><br><span class="line">            <span class="keyword">return</span> nums</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 可以转换</span></span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]](repeating: [<span class="type">Int</span>](repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="built_in">c</span>), <span class="built_in">count</span>: r)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;r*<span class="built_in">c</span> &#123;</span><br><span class="line">            ans[i/<span class="built_in">c</span>][i%<span class="built_in">c</span>] = nums[i/nums[<span class="number">0</span>].<span class="built_in">count</span>][i%nums[<span class="number">0</span>].<span class="built_in">count</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/03/02/ReshapeTheMatrix/">http://yeziahehe.com/2020/03/02/ReshapeTheMatrix/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Array" scheme="http://yeziahehe.com/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>Sum of Left Leaves</title>
    <link href="http://yeziahehe.com/2020/02/28/SumOfLeftLeaves/"/>
    <id>http://yeziahehe.com/2020/02/28/SumOfLeftLeaves/</id>
    <published>2020-02-28T05:39:19.000Z</published>
    <updated>2020-03-01T06:45:19.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/r3mVDi.png" alt></p><p><a href="https://leetcode.com/problems/sum-of-left-leaves/" target="_blank" rel="noopener">LeetCode 404. Sum of Left Leaves</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(logn)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>考虑用递归的思路，存在左子树且左子树的左子树和右子树都为空的情况下就可以返回。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sumOfLeftLeaves</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> sum = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> <span class="keyword">left</span> = root.<span class="keyword">left</span>, <span class="keyword">left</span>.<span class="keyword">left</span> == <span class="literal">nil</span>, <span class="keyword">left</span>.<span class="keyword">right</span> == <span class="literal">nil</span> &#123;</span><br><span class="line">            sum += <span class="keyword">left</span>.val</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum + sumOfLeftLeaves(root.<span class="keyword">left</span>) + sumOfLeftLeaves(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/02/28/SumOfLeftLeaves/">http://yeziahehe.com/2020/02/28/SumOfLeftLeaves/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Tree" scheme="http://yeziahehe.com/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>Assign Cookies</title>
    <link href="http://yeziahehe.com/2020/02/28/AssignCookies/"/>
    <id>http://yeziahehe.com/2020/02/28/AssignCookies/</id>
    <published>2020-02-28T05:39:18.000Z</published>
    <updated>2020-03-01T06:14:47.120Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/WtnWJe.png" alt></p><p><a href="https://leetcode.com/problems/assign-cookies/" target="_blank" rel="noopener">LeetCode 455. Assign Cookies</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(nlogn), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>贪心算法的思想，分配的最优策略是每次分配只关注未分配饼干的最小胃口的小朋友。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findContentChildren</span><span class="params">(<span class="number">_</span> g: [Int], <span class="number">_</span> s: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> gSort = g.sorted()</span><br><span class="line">        <span class="keyword">let</span> sSort = s.sorted()</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; gSort.<span class="built_in">count</span> &amp;&amp; j &lt; sSort.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> gSort[i] &lt;= sSort[j] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/02/28/AssignCookies/">http://yeziahehe.com/2020/02/28/AssignCookies/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Greedy" scheme="http://yeziahehe.com/tags/Greedy/"/>
    
  </entry>
  
  <entry>
    <title>Hamming Distance</title>
    <link href="http://yeziahehe.com/2020/02/27/HammingDistance/"/>
    <id>http://yeziahehe.com/2020/02/27/HammingDistance/</id>
    <published>2020-02-27T05:39:19.000Z</published>
    <updated>2020-03-01T06:45:24.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/9X1Ydr.png" alt></p><p><a href="https://leetcode.com/problems/hamming-distance/" target="_blank" rel="noopener">LeetCode 461. Hamming Distance</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(1), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>首先想到的思路是肯定是循环按每一位去对比，因为范围是给定的 <code>0 ≤ x, y &lt; 2 31</code>。但是这种时间复杂度肯定是 O(n)，算法如下：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hammingDistance</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> xv = x</span><br><span class="line">        <span class="keyword">var</span> yv = y</span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">31</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> bt = xv%<span class="number">2</span></span><br><span class="line">            <span class="keyword">let</span> by = yv%<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> bt == by &#123;</span><br><span class="line">                ans += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            xv = xv/<span class="number">2</span></span><br><span class="line">            yv = yv/<span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以考虑用二进制的一些机制来解题。</p><p>二进制的注意事项：</p><ul><li>取余直接得到当前位的值；</li><li>做除法相当于右移一位；</li><li>位运算里面有很多运算，比如这一题可以用异或，用了异或之后部分情况可能或缩短循环次数</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hammingDistance</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> t = x^y</span><br><span class="line">        <span class="keyword">while</span> (t&gt;<span class="number">0</span>) &#123;</span><br><span class="line">            ans += t&amp;<span class="number">1</span></span><br><span class="line">            t = t&gt;&gt;<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/02/27/HammingDistance/">http://yeziahehe.com/2020/02/27/HammingDistance/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="Bit Manipulation" scheme="http://yeziahehe.com/tags/Bit-Manipulation/"/>
    
  </entry>
  
  <entry>
    <title>Robot Return to Origin</title>
    <link href="http://yeziahehe.com/2020/02/27/RobotReturntoOrigin/"/>
    <id>http://yeziahehe.com/2020/02/27/RobotReturntoOrigin/</id>
    <published>2020-02-27T05:39:18.000Z</published>
    <updated>2020-03-01T06:01:47.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目介绍"><a href="#题目介绍" class="headerlink" title="题目介绍"></a>题目介绍</h1><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/hffxUA.png" alt></p><p><a href="https://leetcode.com/problems/robot-return-to-origin/" target="_blank" rel="noopener">LeetCode 657. Robot Return to Origin</a>。</p><h1 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h1><p>时间复杂度: O(n), 空间复杂度: O(1)</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>因为设定每次移动幅度相同，所以用两个变量分别存储水平和垂直方向的值，只要 string 里面 U 和 D 的数量一致，L 和 R 的数量一致即可回到原点。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">judgeCircle</span><span class="params">(<span class="number">_</span> moves: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> v = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> h = <span class="number">0</span></span><br><span class="line">        moves.<span class="built_in">map</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> $<span class="number">0</span> &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"U"</span> : v -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">"D"</span> : v += <span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">"L"</span> : h -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="string">"R"</span> : h += <span class="number">1</span></span><br><span class="line">                <span class="keyword">default</span>: <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v == <span class="number">0</span> &amp;&amp; h == <span class="number">0</span> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/02/27/RobotReturntoOrigin/">http://yeziahehe.com/2020/02/27/RobotReturntoOrigin/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目介绍&quot;&gt;&lt;a href=&quot;#题目介绍&quot; class=&quot;headerlink&quot; title=&quot;题目介绍&quot;&gt;&lt;/a&gt;题目介绍&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://blog-1258094708.cos.ap-shanghai.myqcloud.com
      
    
    </summary>
    
      <category term="LeetCode OJ" scheme="http://yeziahehe.com/categories/LeetCode-OJ/"/>
    
    
      <category term="算法" scheme="http://yeziahehe.com/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="LeetCode" scheme="http://yeziahehe.com/tags/LeetCode/"/>
    
      <category term="String" scheme="http://yeziahehe.com/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>如何让界面保持流畅</title>
    <link href="http://yeziahehe.com/2020/02/05/smooth_user_interfaces_for_ios/"/>
    <id>http://yeziahehe.com/2020/02/05/smooth_user_interfaces_for_ios/</id>
    <published>2020-02-05T07:22:06.000Z</published>
    <updated>2020-03-01T04:56:43.442Z</updated>
    
    <content type="html"><![CDATA[<p>首先建议大家先读一读这篇文章 <a href="https://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/" target="_blank" rel="noopener">iOS 保持界面流畅的技巧 | Garan no dou</a> ，从原理层面讲的很清楚。</p><h1 id="离屏渲染（offscreen-rendering）"><a href="#离屏渲染（offscreen-rendering）" class="headerlink" title="离屏渲染（offscreen rendering）"></a>离屏渲染（offscreen rendering）</h1><p>关于离屏渲染的概念推荐这篇文章 <a href="https://www.jianshu.com/p/ca51c9d3575b" target="_blank" rel="noopener">离屏渲染优化详解：实例示范+性能测试 - 简书</a>，我们主要说说具体的离屏渲染优化方案。</p><h2 id="圆角-cornerRadius"><a href="#圆角-cornerRadius" class="headerlink" title="圆角 cornerRadius"></a>圆角 cornerRadius</h2><p>首先了解下 cornerRadius 概念，参考 <a href="https://developer.apple.com/documentation/quartzcore/calayer/1410818-cornerradius" target="_blank" rel="noopener">cornerRadius - CALayer | Apple Developer Documentation</a>：</p><blockquote><p>Setting the radius to a value greater than 0.0 causes the layer to begin drawing rounded corners on its background. By default, the corner radius does not apply to the image in the layer’s contents property; it applies only to the background color and border of the layer. However, setting the masksToBounds property to true causes the content to be clipped to the rounded corners.  </p></blockquote><p>声明一点，单纯的设置 <code>layer.cornerRadius</code> 是不会造成任何性能问题的，只有配合 <code>layer.masksToBounds</code> 使用时才会造成离屏渲染（根据试验在 iOS 10 and later 的系统这样设置大部分 UIKit 控件也不会再触发离屏渲染）。在默认情况下，这个属性只会影响 layer 的 background color 和 border，对于 layer 中的 content 的内容是无法奏效。所以我们对以下 UIKit 控件做分析（下面的方法是针对 iOS 10 and later 不触发离屏渲染的方法）：</p><table><thead><tr><th>UIKit</th><th>iOS 9 &amp; Before</th><th>iOS 10 &amp; Later</th></tr></thead><tbody><tr><td>UIView</td><td>只设置 <code>cornerRadius</code></td><td>只设置 <code>cornerRadius</code></td></tr><tr><td>UIImageView</td><td>下方原理解释</td><td>只设置 <code>cornerRadius 和 masksToBounds</code></td></tr><tr><td>UIButton (不设置背景图或 Image)</td><td>只设置 <code>cornerRadius</code></td><td>只设置 <code>cornerRadius</code></td></tr><tr><td>UILabel</td><td>下方原理解释</td><td>设置 <code>cornerRadius 和 masksToBounds</code></td></tr></tbody></table><p>如果是 iOS 10 &amp; Later，可以放心的使用系统方法，除了带图片的 UIButton 其他的控件直接使用不会造成离屏渲染。<br>如果是 iOS 9 &amp; Before，分为以下几种情况：</p><ul><li>UI 提供已经切好的圆角图片；</li><li>混合图层：在要添加圆角的视图上再叠加一个部分透明的视图，只对圆角部分进行遮挡，颜色与背景色相同，可以参考代码 <a href="https://gist.github.com/seedante/84aae946cf91ad099f7814bb6b40a583" target="_blank" rel="noopener">Draw a mask image with Core Graphics API in Swift · GitHub</a>。</li></ul><h3 id="UIImageView"><a href="#UIImageView" class="headerlink" title="UIImageView"></a>UIImageView</h3><p>低版本系统，上述提到的混合图层方法是一种思路，另外可以直接对图片进行剪裁，方法如下：</p><p><img src="https://blog-1258094708.cos.ap-shanghai.myqcloud.com/ResponseChain/WithRoundedCorners.png" alt="WithRoundedCorners"></p><p>因为是贝塞尔曲线的路径，你可以扩展成选择哪几个角有圆角效果，这边不做详细论述。</p><h3 id="UIButton-设置背景图或-Image"><a href="#UIButton-设置背景图或-Image" class="headerlink" title="UIButton 设置背景图或 Image"></a>UIButton 设置背景图或 Image</h3><p>不论系统版本高低，分如下几种情况：</p><ul><li>只有文字的 UIButton 只设置 <code>cornerRadius</code> 即可，不要设置 <code>masksToBounds</code>；</li><li>如果是有图片或者背景图片的 UIButton，方法一使用混合图层，方法二用上述图片剪裁后再设置；</li></ul><h3 id="UILabel"><a href="#UILabel" class="headerlink" title="UILabel"></a>UILabel</h3><p>文本类视图 layer 的 contents 默认是透明的(字符就在这个透明的环境里绘制、显示)，只需要设置 layer 的backgroundColor，再加上 cornerRadius 就可以实现圆角。但是 UILabel 的 backgroundColor 不是对 layer 而是对 content 的背景进行设置，所以不使用 backgroundColor 以及不 IB 里面设置，用如下方法实现即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">label.layer.backgroundColor = color</span><br><span class="line">label.layer.cornerRadius = 5</span><br></pre></td></tr></table></figure><p>UITextField 自带圆角风格，UITextView 可以用类似的方法进行设置。</p><blockquote><p>疑问：发现 UITextView 设置圆角在输入文本后，出现离屏渲染；文本为空时，不会出现离屏渲染。原理暂时未搞清楚。  </p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>如果能只用 cornerRadius 解决问题，不会造成离屏渲染；</li><li>如果必须设置 masksToBounds，若圆角视图的数量较少（一页只有几个）可以考虑不用优化；若数量多参考上述方案优化，尤其在滚动列表中；</li><li>任何时候优先考虑避免触发离屏渲染，无法避免时使用 Rasterization（适用于静态内容的视图，也就是内部结构和内容不发生变化的视图）；</li></ol><h2 id="阴影-shadow"><a href="#阴影-shadow" class="headerlink" title="阴影 shadow"></a>阴影 shadow</h2><p>使用阴影的前提条件是 layer.masksToBounds = false，因此阴影与系统圆角不兼容。</p><p>根据 <a href="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreAnimation_guide/LayerStyleProperties/LayerStyleProperties.html#//apple_ref/doc/uid/TP40004514-CH10-SW18" target="_blank" rel="noopener">Layer Style Property Animations</a> 文档说明，阴影是和视图合成的，位于视图的下方。并且根据 <a href="https://developer.apple.com/documentation/quartzcore/calayer/1410771-shadowpath" target="_blank" rel="noopener">shadowPath - CALayer | Apple Developer Documentation</a> ，默认的阴影路径是 nil。未指定的情况下，阴影是沿着视图非透明部分扩展，如下图所示：</p><p><img src="https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CoreAnimation_guide/Art/visual-shadow_2x.png" alt></p><p>通过设置 <code>shadowPath</code> 来设置阴影来避免离屏渲染，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">imageView.layer.masksToBounds = false</span><br><span class="line">imageView.layer.shadowColor = UIColor.red.cgColor</span><br><span class="line">imageView.layer.shadowOpacity = 1.0 //此参数默认为0，即阴影不显示</span><br><span class="line">imageView.layer.shadowRadius = 2.0 //给阴影加上圆角，对性能无明显影响</span><br><span class="line">imageView.layer.shadowOffset = CGSize(width: 5, height: 5)</span><br><span class="line">let path = UIBezierPath(rect: imageView.bounds) //设定路径：与视图的边界相同</span><br><span class="line">imageView.layer.shadowPath = path.cgPath//路径默认为 nil</span><br></pre></td></tr></table></figure><h2 id="遮罩-masks"><a href="#遮罩-masks" class="headerlink" title="遮罩 masks"></a>遮罩 masks</h2><p>利用遮罩是可以画圆角的，大多数的使用情况是在特殊性质的 view，需要使用 layer mask 来渲染。<br>注意一下两点：</p><ul><li>一旦使用 mask，必定会造成离屏渲染；</li><li>不常变动的打开 shouldRasterize 对渲染结果进行缓存，可以很大程度的提升 FPS；</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>其他的 GroupOpacity、EdgeAntialiasing 在 iOS 10 &amp; Later 后做了优化，日常使用场景较少，不做过多说明。</p><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>类似于 UITableView、UICollectionView 等滚动视图最能反映界面是否流畅，且也最容易出现肉眼可见的不流畅现象。系统对于该视图也有优化，比如常见的在滑动时将 RunLoop 的模式切换到 UITrackingRunLoopMode。</p><p>根据开篇的文章，我们知道视图在显示的过程中，CPU 和 GPU 分别承担了部分工作，所以我们做列表层面的优化也要从这两个方面分别入手，我们着重补充下 CPU 部分，GPU 可以直接参考开篇文章。</p><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><p>在滑动过程中CPU占用特点是：</p><ul><li>滑动时CPU占用率高、空闲时占用率低</li><li>主线程CPU占用率高、子线程占率低</li></ul><p>我们根据上述两个特别分别做优化。</p><h3 id="预加载"><a href="#预加载" class="headerlink" title="预加载"></a>预加载</h3><p>将滑动时的高占用率平摊到空闲时，在空闲时进行预加载。</p><ul><li>iOS 10 &amp; Later，UITableView 和 UICollectionView 提供了预加载机制</li><li>iOS12 开始 prefeatching 做了优化，不再与 cell 加载同时并发进行，而是 cell 加载完成之后串行开始prefeatch，从而优化了流畅度</li><li>加载内容：<ul><li>cell 高度、布局计算</li><li>网络数据和图片</li></ul></li></ul><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><p>涉及到 UIKit 的操作一定是在主线程的，我们只能从以下几个层面去考虑子线程处理：</p><ul><li>图片解码（TODO）<ul><li>当你用 UIImage 或 CGImageSource 的那几个方法创建图片时，图片数据并不会立刻解码。图片设置到 UIImageView 或者 CALayer.contents 中去，并且 CALayer 被提交到 GPU 前，CGImage 中的数据才会得到解码。这一步是发生在主线程的，并且不可避免。如果想要绕开这个机制，常见的做法是在后台线程先把图片绘制到 CGBitmapContext 中，然后从 Bitmap 直接创建图片。目前常见的网络图片库都自带这个功能。</li></ul></li><li>文本计算<ul><li>如果一个界面中包含大量文本（比如微博微信朋友圈等），文本的宽高计算会占用很大一部分资源，并且不可避免。如果你对文本显示没有特殊要求，可以参考下 UILabel 内部的实现方式：用 [NSAttributedString boundingRectWithSize:options:context:] 来计算文本宽高，用 -[NSAttributedString drawWithRect:options:context:] 来绘制文本。尽管这两个方法性能不错，但仍旧需要放到后台线程进行以避免阻塞主线程。如果你用 CoreText 绘制文本，那就可以先生成 CoreText 排版对象，然后自己计算了，并且 CoreText 对象还能保留以供稍后绘制使用。</li></ul></li><li>文本渲染<ul><li>屏幕上能看到的所有文本内容控件，包括 UIWebView，在底层都是通过 CoreText 排版、绘制为 Bitmap 显示的。常见的文本控件 （UILabel、UITextView 等），其排版和绘制都是在主线程进行的，当显示大量文本时，CPU 的压力会非常大。对此解决方案只有一个，那就是自定义文本控件，用 TextKit 或最底层的 CoreText 对文本异步绘制。尽管这实现起来非常麻烦，但其带来的优势也非常大，CoreText 对象创建好后，能直接获取文本的宽高等信息，避免了多次计算（调整 UILabel 大小时算一遍、UILabel 绘制时内部再算一遍）；CoreText 对象占用内存较少，可以缓存下来以备稍后多次渲染。</li></ul></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/" target="_blank" rel="noopener">iOS 保持界面流畅的技巧 | Garan no dou</a></li><li><a href="https://draveness.me/asdk-rendering" target="_blank" rel="noopener">使用 ASDK 性能调优 - 提升 iOS 界面的渲染性能</a></li><li><a href="https://zhuanlan.zhihu.com/p/72653360" target="_blank" rel="noopener">关于iOS离屏渲染的深入研究 - 知乎</a></li><li><a href="https://wereadteam.github.io/2016/05/03/WeRead-Performance/" target="_blank" rel="noopener">微信读书 iOS 性能优化总结 | WeRead团队博客</a></li><li><a href="https://www.jianshu.com/p/ca51c9d3575b" target="_blank" rel="noopener">离屏渲染优化详解：实例示范+性能测试 - 简书</a></li><li><a href="https://juejin.im/post/5b72aaf46fb9a009764bbb6a#heading-1" target="_blank" rel="noopener">iOS性能优化系列篇之“列表流畅度优化” - 掘金</a></li><li><a href="https://xiaozhuanlan.com/topic/0891367254" target="_blank" rel="noopener">iOS 界面流畅性优化 － 小专栏</a></li></ul><blockquote class="blockquote-center"><br><strong>版权声明</strong><br><br><img src="/cc.png" alt><br><br><a href="http://yeziahehe.com">Ivan’s Blog</a> by <a href="http://yeziahehe.com/about">Ivan Ye</a> is licensed under a <a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">Creative Commons BY-NC-ND 4.0 International License</a>.<br>由<a href="http://yeziahehe.com/about">叶帆</a>创作并维护的<a href="http://yeziahehe.com">叶帆的博客</a>博客采用<a href="http://creativecommons.org/licenses/by-nc-nd/4.0/" target="_blank" rel="noopener">创作共用保留署名-非商业-禁止演绎4.0国际许可证</a>。<br><br>本文首发于<a href="http://yeziahehe.com">Ivan’s Blog | 叶帆的博客</a>博客（ <a href="http://yeziahehe.com">http://yeziahehe.com</a> ），版权所有，侵权必究。<br><br>本文链接：<a href="http://yeziahehe.com/2020/02/05/smooth_user_interfaces_for_ios/">http://yeziahehe.com/2020/02/05/smooth_user_interfaces_for_ios/</a></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先建议大家先读一读这篇文章 &lt;a href=&quot;https://blog.ibireme.com/2015/11/12/smooth_user_interfaces_for_ios/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iOS 保持界面流畅的技巧
      
    
    </summary>
    
      <category term="技术" scheme="http://yeziahehe.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="iOS" scheme="http://yeziahehe.com/tags/iOS/"/>
    
  </entry>
  
</feed>
